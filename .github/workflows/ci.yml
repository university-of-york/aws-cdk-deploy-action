name: CI

on:
    pull_request:
        branches: '*'
    push:
        branches: [main]

env:
    CI: true

jobs:
    install:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Set up nodejs ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Get npm cache directory
              id: npm-cache
              run: |
                  echo "::set-output name=dir::$(npm config get cache)"

            - name: Cache npm directory
              uses: actions/cache@v2
              with:
                  path: ${{ steps.npm-cache.outputs.dir }}
                  key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
                  restore-keys: |
                      ${{ runner.os }}-node-

            - name: NPM install
              run: npm ci

    test:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        runs-on: ubuntu-latest
        needs: [install]
        strategy:
            matrix:
                node-version: [12.x]
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Set up nodejs ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Get npm cache directory
              id: npm-cache
              run: |
                  echo "::set-output name=dir::$(npm config get cache)"

            - name: Install dependencies
              run: npm install --prefer-offline --no-audit

            - name: Run test
              run: npm t
    lint:
        if: "!contains(github.event.head_commit.message, '[skip ci]')"
        needs: [install]
        runs-on: ubuntu-latest
        strategy:
            matrix:
                node-version: [12.x]
        steps:
            - name: Checkout branch
              uses: actions/checkout@v2

            - name: Set up nodejs ${{ matrix.node-version }}
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}

            - name: Get npm cache directory
              id: npm-cache
              run: |
                  echo "::set-output name=dir::$(npm config get cache)"

            - name: Install dependencies
              run: npm install --prefer-offline --no-audit

            - name: Run linter
              run: npm run lint

    release:
        if: "github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip ci]')"
        needs: [test, lint]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
              with:
                  persist-credentials: false

            - name: Get npm cache directory
              id: npm-cache
              run: |
                  echo "::set-output name=dir::$(npm config get cache)"

            - name: Setup Node.js with GitHub Package Registry
              uses: actions/setup-node@v1
              with:
                  node-version: ${{ matrix.node-version }}
                  registry-url: ${{ secrets.REGISTRY_HOSTNAME }}
                  scope: '@university-of-york'

            - name: Semantic Release
              uses: cycjimmy/semantic-release-action@v2
              env:
                  GITHUB_TOKEN: ${{ secrets.RELEASE_KEY }}
                  GIT_AUTHOR_NAME: ${{ secrets.RELEASE_NAME }}
                  GIT_AUTHOR_EMAIL: ${{ secrets.RELEASE_EMAIL }}
              with:
                  semantic_version: 17
                  dry_run: false
                  branch: main
                  extra_plugins: |
                      @semantic-release/commit-analyzer
                      @semantic-release/release-notes-generator
                      @semantic-release/changelog
                      @semantic-release/git
                      @semantic-release/github
                      @semantic-release/exec
